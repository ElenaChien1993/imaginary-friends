{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","e","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAGtB,OACI,sBAAKC,UAAU,qDAAf,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BL,EAA1B,4BACrB,gCACI,6BAAKC,IACL,4BAAIC,WCULI,EAjBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAChB,OACI,8BAEQA,EAAOC,KAAI,SAACC,EAAMC,GACd,OACI,cAAC,EAAD,CACIV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,cCI9BS,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKT,UAAU,MAAf,SACI,uBACIA,UAAU,kCACVU,KAAK,SACLC,YAAY,iBACZC,SAAWH,OCAZI,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACKJ,EAAMK,YC2CJC,G,wDAxCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKC,SAAS,CACVC,YAAaF,EAAEG,OAAOC,SAf1B,EAAKC,MAAQ,CACTvB,OAAQ,GACRoB,YAAa,IAJP,E,qDAQd,WAAqB,IAAD,OAChBI,MAAM,8CACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAEnB,OAAQ4B,S,oBAU/C,WACI,MAAgCC,KAAKN,MAA7BvB,EAAR,EAAQA,OAAQoB,EAAhB,EAAgBA,YACVU,EAAiB9B,EAAO+B,QAAO,SAAAC,GACjC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAASd,EAAYa,kBAEzD,OAAQjC,EAAOmC,OAGX,sBAAKvC,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,+BACA,cAAC,EAAD,CAAWS,aAAcwB,KAAKZ,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUjB,OAAQ8B,SAN9B,oBAAIlC,UAAU,KAAd,yB,GA5BUwC,cCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCEdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.f30acc36.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nconst Card = ({ id, name, email }) => {\n    // ES6 的解構賦值\n    // const { id, name, email } = props;\n    return (\n        <div className='tc bg-washed-red dib br3 pa3 ma2 grow bw2 shadow-5'>\n            <img alt='robots' src={`https://robohash.org/${id}?set=set5&size=200x200`} />\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ robots }) => {\n    return (\n        <div>\n            {\n                robots.map((user, i) => {\n                    return (\n                        <Card  \n                            id={robots[i].id} \n                            name={robots[i].name} \n                            email={robots[i].email}\n                        />)\n                })\n            }\n        </div>\n    );\n}\n\nexport default CardList;","import React from 'react';\n\n// search 的 fn 被當成 props 傳進此 component\nconst SearchBox = ({ searchChange }) => {\n    return (\n        <div className='pa2'>\n            <input \n                className='pa3 ba b--blue bg-washed-yellow'\n                type='search' \n                placeholder='search friends'\n                onChange={ searchChange } \n            />\n        </div>\n    );\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '700px' }}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default Scroll;","import React, { Component } from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount() {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then(users => this.setState({ robots: users }));\n    }\n\n    // 做 search 的 fn\n    onSearchChange = (e) => {\n        this.setState({\n            searchfield: e.target.value\n        })\n    }\n\n    render() {\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter(robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        return !robots.length ? \n        <h1 className='tc'>Loading</h1> :\n        (\n            <div className='tc'>\n                <h1 className='h1'>Imaginary Friends</h1>\n                <SearchBox searchChange={this.onSearchChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots} />\n                </Scroll>\n            </div>\n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n// import { robots } from './robots'\n// 因為該檔案非 export default 表示有多個值輸出，所以需用解構 {} 包住\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}